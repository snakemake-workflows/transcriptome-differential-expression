$schema: "http://json-schema.org/draft-07/schema#"

description: snakemake configuration file
type: object


properties:
  samples:
    type: string
    description: "Path of sample '.csv' file"

  inputdir:
    type: string
    description: "Path of sample fasta file directory"

  ref:
    type: object
    properties:
      genome:
        type: string
      annotation:
        type: string
      accession:
        type: string

  read_filter:
    type: object
    properties:
      min_length: 
        type: integer
        minimum: 0

  minimap2:
    type: object
    properties:
      index_opts:
        type: string
      opts:
        type: string
      maximum_secondary:
        type: integer
        minimum: 0
      secondary_score_ratio:
        type: number
        minimum: 0.0

samtools:
  type: object
  properties:
    samtobam_opts:
      type: string
    bamsort_opts:
      type: string
    bamindex_opts:
      type: string
    bamstats_opts:
      type: string

quant:
  type: object
  properties:
    salmon_libtype:
      type: string

deseq2:
  type: object
  properties:
    fit_type:
      type: string
      enum: ["parametric","mean"]
    design_factors:
      type: array
      items:
        type: string
    lfc_null:
      type: number
    alt_hypothesis:
      type: string
      enum: ["greaterAbs", "lessAbs", "greater", "less"]
    point_width:
      type: integer
      minimum: 1
    alpha:
      type: number
      minimum: 0.0
      maximum: 1.0
    threshold_plot:
      type: integer
    colormap:
      type: string
    figtype:
      type: string

isoform_analysis:
  type: object
  properties:
    FLAIR:
      type: boolean
    qscore:
      type: integer
      minimum: 1
    exp_thresh:
      type: integer
      minimum: 0
    col_opts:
      type: string
  required:
    - FLAIR
  allOf:
    - if:
        properties:
          FLAIR:
            const: true
      then:
        required: ["qscore","exp_thresh","col_opts"]

protein_annotation:
  type: object
  properties:
    lambda:
      type: boolean
    uniref:
      type: string
    num_matches:
      type: integer
      minimum: 1
  required:
    - lambda
  allOf:
    - if:
        properties:
          lambda:
            const: true
      then:
        required: ["uniref","num_matches"]

required:
  - samples
  - inputdir
  - ref
  - read_filter
  - minimap2
  - samtools
  - quant 
  - deseq2
  - isoform_analysis
  - protein_annotation
